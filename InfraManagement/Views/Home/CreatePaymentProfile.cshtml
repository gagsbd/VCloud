@using CaptchaMvc.HtmlHelpers

@model InfraManagement.Models.PaymentCard

@{
    ViewBag.Title = "CreatePaymentProfileView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Create Your Profile</h2>


@using (Html.BeginForm("Authorize", "Home"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="input-group-text">Payment Card information</h4>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="table">
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CCnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CCnumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CCnumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CCExpMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CCExpMonth, new SelectList(new List<string>() { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CCExpMonth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CCExpYear, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @{ 
                                var years = new List<string>();
                                for (int i = DateTime.Now.Year; i <= DateTime.Now.Year + 10; i++)
                                {
                                    years.Add(i.ToString());
                                }
                                }
                                @Html.DropDownListFor(model => model.CCExpYear, new SelectList(years), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CCExpYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CCCVS, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CCCVS, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CCCVS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td></td>
            </tr>
            <tr>
                <td colspan="2">
                    <div class="form-group">
                        <div class="col-md-10">

                            @{var captcha = Html.Captcha("Refresh", "Enter the text shown in the image", 5, "Text do not matcch the image.", false);}
                            @captcha
                            @Html.ValidationMessage(captcha.BuildInfo.InputElementId, new { @class = "text-danger" })
                            @*@Html.ValidationMessage("CaptchaCode", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </td>

            </tr>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 text-center">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
